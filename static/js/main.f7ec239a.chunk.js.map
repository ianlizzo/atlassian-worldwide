{"version":3,"sources":["images/atlassian-supreme.png","images/AMSTERDAM.png","images/AUSTIN.png","images/BANGALORE.png","images/MANILA.png","images/MTV.png","images/NYC.png","images/SF.png","images/Sydney.png","images/YOKOHAMA.png","logo.svg","components/markers.js","components/mapStyles.js","components/map.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","markers","markerOffsetY","markerOffsetX","name","coordinates","color","description","scrollStyles","offset","align","duration","scrollText","margin","cursor","imageText","textOrientation","writingMode","alignSelf","geographyDefault","fill","stroke","strokeWidth","outline","geographyHover","geographyPressed","mapStyle","marginTop","width","height","returnStyle","position","bottom","fontFamily","wrapperStyles","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onOpenModal","setState","open","onCloseModal","state","center","zoom","firstClick","city","desc","handleCityClick","bind","assertThisInitialized","handleReset","_this2","react_default","a","createElement","react_flexbox_grid_lib","xs","style","react_stickynode_default","src","atlaswear","maxHeight","maxWidth","onClick","scroll","Home","middle","Sf","Mv","At","Ny","Mn","Sy","Bg","Am","Yk","_this3","className","fluid","end","sf","marginRight","ref","section","defineProperty","mt","at","ny","mn","sy","bg","am","yk","_this4","marginBottom","renderSideBar","index_es","onClose","react_motion","defaultStyle","x","y","spring","stiffness","damping","_ref","lib","projectionConfig","scale","geography","geographies","projection","map","i","id","key","default","hover","pressed","marker","cx","cy","r","opacity","textAnchor","KeyboardReturn_default","renderImages","myRef","Component","App","components_map","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7ec239a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/atlassian-supreme.5961730d.png\";","module.exports = __webpack_public_path__ + \"static/media/AMSTERDAM.3e88f790.png\";","module.exports = __webpack_public_path__ + \"static/media/AUSTIN.3ce8205d.png\";","module.exports = __webpack_public_path__ + \"static/media/BANGALORE.f94c6a7c.png\";","module.exports = __webpack_public_path__ + \"static/media/MANILA.9017af52.png\";","module.exports = __webpack_public_path__ + \"static/media/MTV.ec96459f.png\";","module.exports = __webpack_public_path__ + \"static/media/NYC.41c024ef.png\";","module.exports = __webpack_public_path__ + \"static/media/SF.74e665a6.png\";","module.exports = __webpack_public_path__ + \"static/media/Sydney.4d8da4e5.png\";","module.exports = __webpack_public_path__ + \"static/media/YOKOHAMA.2962b5e3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const markers = [\n  {\n    markerOffsetY: -25,\n    markerOffsetX: -70,\n    name: \"San Francisco\",\n    coordinates: [-122.4033, 37.7911],\n    color: \"#f8a133\",\n    description:\n      \"Walk into our beautiful heritage office in Sydney and you might wonder how this collection of cutting-edge thinkers and talented tinkerers ever ended up amongst the marble and mahogany of one of the CBD’s oldest buildings. But we love life’s little contradictions. And we’re passionately building something of our own inside, every bit as unique as our sumptuous surroundings.\",\n  },\n  {\n    markerOffsetY: 25,\n    markerOffsetX: -55,\n    name: \"Mountain View\",\n    coordinates: [-122.0609, 37.3874],\n    color: \"#f8a133\",\n  },\n  {\n    markerOffsetY: -25,\n    markerOffsetX: -20,\n    name: \"Austin\",\n    coordinates: [-97.7446, 30.2657],\n    color: \"#383ba7\",\n  },\n  {\n    markerOffsetY: 20,\n    markerOffsetX: 45,\n    name: \"New York City\",\n    coordinates: [-72.842792, 40.811081],\n    color: \"#d12220\",\n  },\n  {\n    markerOffsetY: -10,\n    markerOffsetX: 40,\n    name: \"Manila\",\n    coordinates: [121.070309, 14.515135],\n    color: \"#0fa36c\",\n  },\n  {\n    markerOffsetY: -10,\n    markerOffsetX: 40,\n    name: \"Sydney\",\n    coordinates: [151.206961, -33.867332],\n    color: \"#f8e783\",\n    description:\n      \"Walk into our beautiful heritage office in Sydney and you might wonder how this collection of cutting-edge thinkers and talented tinkerers ever ended up amongst the marble and mahogany of one of the CBD’s oldest buildings. But we love life’s little contradictions. And we’re passionately building something of our own inside, every bit as unique as our sumptuous surroundings.\\n \\nAtlassian is a community of creative, hard-working people hell-bent on making cool things together. In Sydney, our designers, engineers and growth hackers–from over 30 nationalities–combine to chase down the ultimate experience for our customers. And despite the onsite fitness, bike repair and towel service, working with awesome people every day is the best perk of all.\",\n  },\n  {\n    markerOffsetY: -10,\n    markerOffsetX: -1,\n    name: \"Bengaluru\",\n    coordinates: [77.579626, 13.047294],\n    color: \"#fdcaaf\",\n  },\n  {\n    markerOffsetY: -40,\n    markerOffsetX: -1,\n    name: \"Amsterdam\",\n    coordinates: [4.888533, 52.373533],\n    color: \"#f65538\",\n  },\n  {\n    markerOffsetY: 0,\n    markerOffsetX: 50,\n    name: \"Yokohama\",\n    coordinates: [139.620858, 35.452742],\n    color: \"#fabed9\",\n  },\n];\n","export const scrollStyles = {\n  offset: -20,\n  align: \"top\",\n  duration: 1500,\n};\n\nexport const scrollText = {\n  margin: 5,\n  cursor: \"pointer\",\n};\n\nexport const imageText = {\n  //   fontSize: 25,\n  textOrientation: \"mixed\",\n  writingMode: \"vertical-rl\",\n  alignSelf: \"flex-start\",\n};\n\nexport const geographyDefault = {\n  fill: \"#ECEFF1\",\n  stroke: \"#607D8B\",\n  strokeWidth: 0.75,\n  outline: \"none\",\n};\n\nexport const geographyHover = {\n  fill: \"#CFD8DC\",\n  stroke: \"#607D8B\",\n  strokeWidth: 0.75,\n  outline: \"none\",\n};\n\nexport const geographyPressed = {\n  fill: \"#FF5722\",\n  stroke: \"#607D8B\",\n  strokeWidth: 0.75,\n  outline: \"none\",\n};\n\nexport const mapStyle = {\n  marginTop: 25,\n  width: \"95%\",\n  height: \"100%\",\n};\n\nexport const returnStyle = {\n  cursor: \"pointer\",\n  position: \"relative\",\n  bottom: 30,\n  fontFamily: \"monospace\",\n  height: 30,\n  width: 30,\n  color: \"gray\",\n};\n","import React, { Component } from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker,\n} from \"react-simple-maps\";\nimport Modal from \"react-responsive-modal\";\n\nimport { Motion, spring } from \"react-motion\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport Sticky from \"react-stickynode\";\nimport Return from \"@material-ui/icons/KeyboardReturn\";\nimport scroll from \"react-scroll-to-component\";\nimport atlaswear from \"../images/atlassian-supreme.png\";\nimport am from \"../images/AMSTERDAM.png\";\nimport at from \"../images/AUSTIN.png\";\nimport bg from \"../images/BANGALORE.png\";\nimport mn from \"../images/MANILA.png\";\nimport mt from \"../images/MTV.png\";\nimport ny from \"../images/NYC.png\";\nimport sf from \"../images/SF.png\";\nimport sy from \"../images/Sydney.png\";\nimport yk from \"../images/YOKOHAMA.png\";\nimport ReactModal from \"react-modal\";\nimport { markers } from \"./markers\";\nimport \"./map.css\";\nimport {\n  scrollStyles,\n  scrollText,\n  imageText,\n  geographyDefault,\n  geographyHover,\n  geographyPressed,\n  mapStyle,\n  returnStyle,\n} from \"./mapStyles\";\n\nconst wrapperStyles = {\n  width: \"100%\",\n  margin: \"0 auto\",\n};\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      center: [0, 20],\n      zoom: 1,\n      open: false,\n      firstClick: false,\n      city: \"\",\n      desc: \"\",\n    };\n\n    this.handleCityClick = this.handleCityClick.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.onOpenModal = this.onOpenModal.bind(this);\n    this.onCloseModal = this.onCloseModal.bind(this);\n\n    // this.showModal = this.showModal.bind(this);\n  }\n\n  onOpenModal = () => {\n    this.setState({ open: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n  handleCityClick(city) {\n    if (this.state.firstClick) {\n      this.setState({\n        open: true,\n        city: city.name,\n        desc: city.description,\n      });\n    }\n    this.setState({\n      zoom: 5,\n      center: city.coordinates,\n      firstClick: true,\n    });\n  }\n  handleReset() {\n    this.setState({\n      center: [0, 20],\n      zoom: 1,\n      firstClick: false,\n    });\n  }\n\n  renderSideBar() {\n    return (\n      <Col xs={2} style={{ fontFamily: \"monospace\" }}>\n        <Sticky>\n          <img\n            src={atlaswear}\n            style={{\n              marginTop: 20,\n              maxHeight: 100,\n              maxWidth: 150,\n              cursor: \"pointer\",\n            }}\n            onClick={() => scroll(this.Home, scrollStyles)}\n          />\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Sf, scrollStyles)}>\n              {\"San Francisco\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Mv, scrollStyles)}>\n              {\"Mountain View\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.At, scrollStyles)}>\n              {\"Austin\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Ny, scrollStyles)}>\n              {\"New York City\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\" style={{ cursor: \"pointer\" }}>\n            <p style={scrollText} onClick={() => scroll(this.Mn, scrollStyles)}>\n              {\"Manila\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Sy, scrollStyles)}>\n              {\"Sydney\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Bg, scrollStyles)}>\n              {\"Bengaluru\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Am, scrollStyles)}>\n              {\"Amsterdam\"}\n            </p>\n          </Row>\n          <Row middle=\"xs\">\n            <p style={scrollText} onClick={() => scroll(this.Yk, scrollStyles)}>\n              {\"Yokohama\"}\n            </p>\n          </Row>\n        </Sticky>\n      </Col>\n    );\n  }\n\n  renderImages() {\n    return (\n      <Grid className=\"images\" fluid>\n        <Row xs end=\"xs\">\n          <img\n            src={sf}\n            style={{\n              width: \"76%\",\n              height: \"100%\",\n              maxHeight: \"100%\",\n              marginRight: 20,\n            }}\n            className=\"sf\"\n            ref={section => {\n              this.Sf = section;\n            }}\n          />\n\n          <p style={imageText}>SAN FRANCISCO</p>\n        </Row>\n\n        <Row xs end=\"xs\">\n          <img\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n            className=\"mv\"\n            ref={section => {\n              this.Mv = section;\n            }}\n            src={mt}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>MOUNTAIN VIEW</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"at\"\n            ref={section => {\n              this.At = section;\n            }}\n            src={at}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>AUSTIN</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"ny\"\n            ref={section => {\n              this.Ny = section;\n            }}\n            src={ny}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>NEW YORK CITY</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"mn\"\n            ref={section => {\n              this.Mn = section;\n            }}\n            src={mn}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>MANILA</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"sy\"\n            ref={section => {\n              this.Sy = section;\n            }}\n            src={sy}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>SYDNEY</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"bg\"\n            ref={section => {\n              this.Bg = section;\n            }}\n            src={bg}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>BENGALURU</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"am\"\n            ref={section => {\n              this.Am = section;\n            }}\n            src={am}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>AMSTERDAM</p>\n        </Row>\n        <Row xs end=\"xs\">\n          <img\n            className=\"yk\"\n            ref={section => {\n              this.Yk = section;\n            }}\n            src={yk}\n            style={{\n              width: \"76%\",\n              maxWidth: \"100%\",\n              height: \"100%\",\n              marginRight: 20,\n            }}\n          />\n          <p style={imageText}>YOKOHAMA</p>\n        </Row>\n      </Grid>\n    );\n  }\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div\n        className=\"home\"\n        ref={section => {\n          this.Home = section;\n        }}\n        style={wrapperStyles}\n      >\n        <Grid fluid style={{ marginBottom: 100 }}>\n          <Row xs>\n            {this.renderSideBar()}\n            <Col xs>\n              <Modal open={open} onClose={this.onCloseModal}>\n                <h2>{this.state.city}</h2>\n                <p>{this.state.desc}</p>\n              </Modal>\n              <Motion\n                defaultStyle={{\n                  zoom: 1,\n                  x: 0,\n                  y: 20,\n                }}\n                style={{\n                  zoom: spring(this.state.zoom, {\n                    stiffness: 50,\n                    damping: 20,\n                  }),\n                  x: spring(this.state.center[0], {\n                    stiffness: 210,\n                    damping: 20,\n                  }),\n                  y: spring(this.state.center[1], {\n                    stiffness: 210,\n                    damping: 20,\n                  }),\n                }}\n              >\n                {({ zoom, x, y }) => (\n                  <ComposableMap\n                    projectionConfig={{ scale: 215 }}\n                    width={980}\n                    height={450}\n                    style={mapStyle}\n                  >\n                    <ZoomableGroup center={[x, y]} zoom={zoom}>\n                      <Geographies geography=\"https://raw.githubusercontent.com/ianlizzo/atlassian-worldwide/master/public/static/world-110m.json\">\n                        {(geographies, projection) =>\n                          geographies.map(\n                            (geography, i) =>\n                              geography.id !== \"010\" && (\n                                <Geography\n                                  key={i}\n                                  geography={geography}\n                                  projection={projection}\n                                  style={{\n                                    default: geographyDefault,\n                                    hover: geographyHover,\n                                    pressed: geographyPressed,\n                                  }}\n                                />\n                              )\n                          )\n                        }\n                      </Geographies>\n                      <Markers className=\"marker\">\n                        {markers.map((marker, i) => (\n                          <Marker\n                            onClick={this.handleCityClick}\n                            key={i}\n                            marker={marker}\n                            style={{\n                              outline: \"none\",\n                              default: { fill: marker.color, outline: \"none\" },\n                              hover: {\n                                fill: \"#FFFFFF\",\n                                cursor: \"pointer\",\n                                outline: \"none\",\n                              },\n                              pressed: {\n                                fill: \"#FF5722\",\n                                outline: \"none\",\n                              },\n                            }}\n                          >\n                            <circle\n                              cx={0}\n                              cy={0}\n                              r={5}\n                              style={{\n                                stroke: marker.color,\n                                strokeWidth: 3,\n                                opacity: 0.9,\n                              }}\n                            />\n                            <text\n                              textAnchor=\"middle\"\n                              y={marker.markerOffsetY}\n                              x={marker.markerOffsetX}\n                              style={{\n                                fontFamily: \"monospace\",\n                                fill: \"black\",\n                                outline: \"none\",\n                              }}\n                            >\n                              {marker.name}\n                            </text>\n                          </Marker>\n                        ))}\n                      </Markers>\n                    </ZoomableGroup>\n                  </ComposableMap>\n                )}\n              </Motion>\n              <Col xs>\n                <Return style={returnStyle} onClick={this.handleReset} />\n              </Col>\n            </Col>\n          </Row>\n        </Grid>\n        {this.renderImages()}\n        <div style={{ margin: 50 }} ref={this.myRef} />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Map from \"./components/map\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}